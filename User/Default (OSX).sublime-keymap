[
	// {"keys": ["f1"], "command": "compile_with_view"},

	//run current python
	{ "keys": ["ctrl+super+r"], "command": "repl_open",
	                 "caption": "Python - RUN current file",
	                 "id": "repl_python_run",
	                 "mnemonic": "d",
	                 "args": {
	                    "type": "subprocess",
	                    "encoding": "utf8",
	                    "cmd": ["python", "-u", "$file_basename"],
	                    "cwd": "$file_path",
	                    "syntax": "Packages/Python/Python.tmLanguage",
	                    "external_id": "python",
	                    "extend_env": {"PYTHONIOENCODING": "utf-8"}
	                    }
	},

    // Delete a line with cmd+delete
    { "keys": ["super+backspace"], "command": "run_macro_file", "args": {
        "file": "Packages/Default/Delete Line.sublime-macro"
    }},
    // Delete from cursor to end of line
    { "keys": ["super+k"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete to Hard EOL.sublime-macro"} },
    // Delete from cursor to start of line
	{ "keys": ["super+shift+k"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete to Hard BOL.sublime-macro"} },

    // open containing folder
    { "keys": ["f10"], "command": "open_dir",
    "args": {"dir": "$file_path", "file": "$file_name"} },

    // browse packages
    { "keys": ["f9"], "command": "open_dir",
    "args": {"dir": "${packages}/User/"} },

    // swap cmd+n and cmd+t
    { "keys": ["super+t"], "command": "new_file" },

    { "keys": ["super+n"], "command": "show_overlay", "args": {"overlay": "goto", "show_files": true} },

	// insert matching $
	// note the "key": "selector" line!
	{ "keys": ["$"], "command": "insert_snippet", "args": {"contents": "\\$ $1 \\$$0"},
		"context":[
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			/*{ "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|])", "match_all": true },*/
			{ "key": "preceding_text", "operator": "not_regex_contains", "operand": "[\"a-zA-Z0-9_]$", "match_all": true },
			{ "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double", "match_all": true }]
	},

	//wrap in $
	{ "keys": ["$"], "command": "insert_snippet", "args": {"contents": "\\$ ${0:$SELECTION} \\$$0"},
		"context":[
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
	]
	},

	// set "_" to auto complete with "_{}" in LaTeX math environment
	{ "keys": ["_"], "command": "insert_snippet", "args": {"contents": "_{$1}$0"},
	"context":
	  [
	    { "key": "selector", "operator": "equal", "operand": "text.tex.latex string.other.math"},
	    { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
	    { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }
	  ]
	},
	// set "^" to auto complete with "^{}" in LaTeX math environment
	{ "keys": ["^"], "command": "insert_snippet", "args": {"contents": "^{$1}$0"},
	"context":
	  [
	    { "key": "selector", "operator": "equal", "operand": "text.tex.latex string.other.math"},
	    { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
	    { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }
	  ]
	},

	{ "keys": ["enter"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
	    [
	      { "key": "following_text", "operator": "regex_contains", "operand": "^[)\\}\\]\\>\\'\\\"\\ %>\\}\\;\\,$]", "match_all": true },
	      { "key": "preceding_text", "operator": "not_regex_match", "operand": "^.*\\{$", "match_all": true  },
	      { "key": "auto_complete_visible", "operator": "equal", "operand": false }
	    ]
	  },
]
